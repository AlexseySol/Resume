// src/utils/telegram.js
import axios from 'axios';

const TELEGRAM_API_URL = 'https://api.telegram.org/bot';
const TELEGRAM_TOKEN = process.env.REACT_APP_TELEGRAM_BOT_TOKEN; // –¢–æ–∫–µ–Ω –∏–∑ .env
const TELEGRAM_CHANNEL_ID = process.env.REACT_APP_TELEGRAM_CHANNEL_ID; // –ö–∞–Ω–∞–ª –∏–∑ .env

export const sendMessageToTelegram = async (name, email, contactMethod, message) => {
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  const messageText = `
  *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!* üéâ
  
  *–ò–º—è:* ${name}
  *Email:* ${email}
  *–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è:* ${contactMethod}
  ${message ? `*–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message}` : ''}
  
  _–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!_
  `;

  const data = {
    chat_id: TELEGRAM_CHANNEL_ID,
    text: messageText,
    parse_mode: 'Markdown', // –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  };

  try {
    const response = await axios.post(`${TELEGRAM_API_URL}${TELEGRAM_TOKEN}/sendMessage`, data);
    console.log('Message sent successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error sending message to Telegram:', error.response?.data || error.message);
    throw new Error('Failed to send message');
  }
};
